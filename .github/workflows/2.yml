name: Comment on PR Merge

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  comment-on-pr:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install octokit
        run: npm install @octokit/core

      - name: Get PR Author's Merged PR Count
        id: pr-count
        run: |
          node <<EOF
          const { Octokit } = require("@octokit/core");
          const octokit = new Octokit({ auth: process.env.PAT_TOKEN });
          const fs = require('fs');

          async function getMergedPRCount() {
              const owner = process.env.GITHUB_REPOSITORY_OWNER;
              const repo = process.env.GITHUB_REPOSITORY.split('/')[1];
              const author = process.env.GITHUB_ACTOR;

              console.log('GITHUB_REPOSITORY_OWNER:', owner);
              console.log('GITHUB_REPOSITORY:', process.env.GITHUB_REPOSITORY);
              console.log('Extracted repo:', repo);
              console.log('GITHUB_ACTOR:', author);

              const query = `repo:${owner}/${repo} author:${author} is:pr is:merged`;
              console.log('Constructed query:', query);

              try {
                  const response = await octokit.request('GET /search/issues', {
                      q: query,
                  });

                  const count = response.data.total_count;
                  console.log('Total merged PR count:', count);
                  fs.appendFileSync(process.env.GITHUB_OUTPUT, `count=${count}\n`);
              } catch (error) {
                  console.error('Error fetching merged PR count:', error);
                  process.exit(1);
              }
          }

          getMergedPRCount().catch(error => {
              console.error('Error in getMergedPRCount function:', error);
              process.exit(1);
          });
          EOF
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_OUTPUT: $GITHUB_ENV

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const count = parseInt(core.getInput('count'));
            console.log('Merged PR count from previous step:', count);
            let comment;
            if (count === 1) {
              comment = "1 PR merged successfully!";
            } else if (count === 2) {
              comment = "You have merged 2 PRs successfully!";
            } else {
              comment = `Excellent! You have merged ${count} PRs!`;
            }
            console.log('Comment to post on PR:', comment);
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        inputs:
          count: ${{ steps.pr-count.outputs.count }}
